{"ast":null,"code":"import _defineProperty from\"/workspace/ta-te-ti/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/workspace/ta-te-ti/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/workspace/ta-te-ti/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/workspace/ta-te-ti/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import'./App.css';import Board from'./components/Board/Board';import ScoreBoard from'./components/ScoreBoard/ScoreBoard';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var winningPositions=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];var App=function App(){var _useState=useState('X'),_useState2=_slicedToArray(_useState,2),turn=_useState2[0],setTurn=_useState2[1];var _useState3=useState(Array(9).fill(null)),_useState4=_slicedToArray(_useState3,2),squares=_useState4[0],setSquares=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),winningSquares=_useState6[0],setWinningSquares=_useState6[1];var _useState7=useState({X:0,O:0}),_useState8=_slicedToArray(_useState7,2),score=_useState8[0],setScore=_useState8[1];var reset=function reset(){setTurn('X');setSquares(Array(9).fill(null));setWinningSquares([]);};var checkForWinner=function checkForWinner(newSquares){for(var i=0;i<winningPositions.length;i++){var _winningPositions$i=_slicedToArray(winningPositions[i],3),a=_winningPositions$i[0],b=_winningPositions$i[1],c=_winningPositions$i[2];if(newSquares[a]&&newSquares[a]===newSquares[b]&&newSquares[a]===newSquares[c]){endGame(newSquares[a],winningPositions[i]);return;}}if(!newSquares.includes(null)){endGame(null,Array.from(Array(10).keys()));return;}setTurn(turn==='X'?'O':'X');};var handleClick=function handleClick(square){var newSquares=_toConsumableArray(squares);newSquares.splice(square,1,turn);setSquares(newSquares);checkForWinner(newSquares);};var endGame=function endGame(result,winningPositions){setTurn(null);if(result!==null){setScore(_objectSpread(_objectSpread({},score),{},_defineProperty({},result,score[result]+1)));}setWinningSquares(winningPositions);setTimeout(reset,2000);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Board,{winningSquares:winningSquares,turn:turn,squares:squares,onClick:handleClick}),/*#__PURE__*/_jsx(ScoreBoard,{scoreO:score.O,scoreX:score.X})]});};export default App;","map":{"version":3,"sources":["/workspace/ta-te-ti/src/App.js"],"names":["useState","Board","ScoreBoard","winningPositions","App","turn","setTurn","Array","fill","squares","setSquares","winningSquares","setWinningSquares","X","O","score","setScore","reset","checkForWinner","newSquares","i","length","a","b","c","endGame","includes","from","keys","handleClick","square","splice","result","setTimeout"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport Board from './components/Board/Board';\nimport ScoreBoard from './components/ScoreBoard/ScoreBoard';\n\nconst winningPositions = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6],\n];\n\n\nconst App = () => {\n\n  const [turn, setTurn] = useState('X');\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [winningSquares, setWinningSquares] = useState([]);\n  const [score, setScore] = useState({\n    X: 0,\n    O: 0,\n  });\n\n  const reset = () => {\n    setTurn('X');\n    setSquares(Array(9).fill(null));\n    setWinningSquares([]);\n  }\n\n  const checkForWinner = newSquares => {\n    for(let i = 0; i < winningPositions.length; i++) {\n      const [a,b,c] = winningPositions[i];\n      if(newSquares[a] && newSquares[a] === newSquares[b] && newSquares[a] === newSquares[c]) {\n        endGame(newSquares[a], winningPositions[i]);\n        return\n      }\n    }\n\n    if(!newSquares.includes(null)) {\n      endGame(null, Array.from(Array(10).keys()));\n      return\n    }\n    setTurn(turn === 'X' ? 'O' : 'X');\n  }\n\n  const handleClick = square => {\n    let newSquares = [...squares];\n    newSquares.splice(square, 1, turn);\n    setSquares(newSquares);\n    checkForWinner(newSquares);\n  }\n\n  const endGame = (result, winningPositions) => {\n    setTurn(null);\n    if(result !== null) {\n      setScore({\n        ...score,\n        [result]: score[result] + 1,\n      })\n    }\n    setWinningSquares(winningPositions);\n    setTimeout(reset, 2000);\n  }\n\n  return (\n    <div className=\"container\">\n      <Board winningSquares={winningSquares} turn={turn} squares={squares} onClick={handleClick}/>\n      <ScoreBoard scoreO={score.O} scoreX={score.X} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}