{"ast":null,"code":"var _jsxFileName = \"/workspace/ta-te-ti/src/components/Board/Board.js\";\nimport Square from \"../Square/Square\";\nimport './Board.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Board = ({\n  squares,\n  onClick,\n  turn,\n  winningSquares\n}) => {\n  const createSquares = values => values.map(value => /*#__PURE__*/_jsxDEV(Square, {\n    winner: winningSquares.includes(value),\n    turn: turn,\n    onClick: () => onClick(value),\n    value: squares[value]\n  }, `square_${value}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 13\n  }, this));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: createSquares([0, 1, 2])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: createSquares([3, 4, 5])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: createSquares([6, 7, 8])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/workspace/ta-te-ti/src/components/Board/Board.js"],"names":["Square","Board","squares","onClick","turn","winningSquares","createSquares","values","map","value","includes"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,kBAAnB;AACA,OAAO,aAAP;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA,IAAnB;AAAyBC,EAAAA;AAAzB,CAAD,KAA+C;AAEzD,QAAMC,aAAa,GAAGC,MAAM,IACxBA,MAAM,CAACC,GAAP,CAAYC,KAAK,iBACb,QAAC,MAAD;AACI,IAAA,MAAM,EAAEJ,cAAc,CAACK,QAAf,CAAwBD,KAAxB,CADZ;AAEI,IAAA,IAAI,EAAEL,IAFV;AAGI,IAAA,OAAO,EAAE,MAAMD,OAAO,CAACM,KAAD,CAH1B;AAII,IAAA,KAAK,EAAEP,OAAO,CAACO,KAAD;AAJlB,KAKU,UAASA,KAAM,EALzB;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACIH,aAAa,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAD;AADjB;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACKA,aAAa,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAD;AADlB;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACKA,aAAa,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAD;AADlB;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA3BD;;KAAML,K;AA6BN,eAAeA,KAAf","sourcesContent":["import Square from \"../Square/Square\";\nimport './Board.css';\n\nconst Board = ({squares, onClick, turn, winningSquares }) => {\n\n    const createSquares = values => (\n        values.map( value => (\n            <Square\n                winner={winningSquares.includes(value)}\n                turn={turn}\n                onClick={() => onClick(value)}\n                value={squares[value]}\n                key={`square_${value}`}\n            />\n        ))\n    );\n\n    return (\n        <div className=\"board\">\n            <div className=\"row\">\n               {createSquares([0,1,2])}\n            </div>\n            <div className=\"row\">\n                {createSquares([3,4,5])}\n            </div>\n            <div className=\"row\">\n                {createSquares([6,7,8])}\n            </div>\n        </div>\n    );\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}